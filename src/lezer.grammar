@top Grammar { 
  Top | Rule | Skip | Precedence | Tokens
}

Top {
  "@top" Rule
}

Skip {
  "@skip" "{" MainSkip? "}" |
  "@skip" "{" MainSkip? "}" "{" ScopedSkip "}"
}

MainSkip {
  ruleExpr
}

ScopedSkip {
  Rule*
}

Precedence {
  "@precedence" "{" precedenceItem ("," precedenceItem)* "}"
}

precedenceItem {
  PrecedenceItem |
  PrecedenceItemCut |
  PrecedenceItemLeft |
  PrecedenceItemRight
}

PrecedenceItem {
  Identifier
}

PrecedenceItemCut {
  Identifier "@cut"
}

PrecedenceItemLeft {
  Identifier "@left" 
}

PrecedenceItemRight {
  Identifier "@right"
}

Tokens {
  "@tokens" "{" Rule "}"
}

Rule { 
  Identifier "{" ruleExpr "}"
}

ruleExpr {
  ChoiceOp | term | Rule
}

ChoiceOp {
  term ( "|" term )+
}

term {
  ( element | operator )+
}

NegateOp {
  "!" element
}

PlusOp {
  element "+"
}

AstOp {
  element "*"
}

operator {
  NegateOp | PlusOp | AstOp
}

element {
  Identifier | LiteralString | LiteralRegexp | "(" ruleExpr ")" | Any
}

Identifier {
  identifier
}

LiteralString {
  dq_string | sq_string
}

LiteralRegexp {
  regexp
}

kw<term> { @specialize[@name={term}]<identifier, term> }

@tokens {
  identifier {
    $[a-zA-Z] $[a-zA-Z0-9_.]*
  }
  at_keyword {
    "@" $[a-zA-Z_] $[a-zA-Z0-9_]*
  }
  regexp { "$[" reg_char+ "]" | "![" reg_char+ "]" }
  reg_char { $[\u{20}-\u{5c}\u{5e}-\u{10ffff}] | "\\" esc | "\\]" }
  dq_string { '"' dq_char* '"' }
  dq_char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  sq_string { "'" sq_char* "'" }
  sq_char { $[\u{20}-\u{26}\u{28}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  esc { $["\\bfnrtu] }
  whitespace { $[ \n\r\t] }
  Comment { "//" ![\n]* }
  Any { "_" }
}

@skip { whitespace }