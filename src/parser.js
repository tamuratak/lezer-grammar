// This file was generated by lezer-generator. You probably shouldn't edit it.
const {Parser} = require("lezer")
exports.parser = Parser.deserialize({
  version: 12,
  states: "(pOVQPOOOOQO'#C`'#C`OhQPO'#C_OmQPO'#C^OrQPO'#CgOwQPO'#CjQOQPOOO|QPO,58yOOQO,58x,58xO!bQPO,59ROmQPO,59UOOQO'#Cb'#CbOOQO'#Cc'#CcO!iQPO'#CzOOQO'#Cz'#CzO|QPO'#CzO#aQPO'#CdO#rQPO'#CoOOQO'#DQ'#DQOOQO'#Co'#CoO$gQPO'#CyOOQO'#Cy'#CyO$tQPO1G.eOOQO'#Ch'#ChO$yQPO1G.mO%RQPO1G.mO%WQPO'#CkOOQO'#Ck'#CkO%iQPO1G.pO%qQPO,59fOOQO,59O,59OOOQO,59P,59POOQO,59Q,59QOOQO-E6m-E6mO%vQPO,58{O|QPO'#CpOOQO7+$P7+$PO&RQPO7+$XO&ZQPO7+$XOOQO,59W,59WOOQO,59X,59XOOQO,59Y,59YOmQPO'#CrO&cQPO7+$[OOQO7+$[7+$[OOQO1G/Q1G/QOOQO-E6n-E6nO&kQPO,59[OOQO'#Cq'#CqO&xQPO'#CiO'QQPO<<GsO&RQPO<<GsOOQO,59^,59^OOQO-E6p-E6pOOQO<<Gv<<GvOOQO-E6o-E6oOOQOAN=_AN=_O'VQPOAN=_OOQOG22yG22y",
  stateData: "'[~OiOS~OjROkPOzSO{TOgZP~OlVO~OkPO~OlXO~OlYO~OkPOoZOpZOq[Or_Ou`O~OyhO~P|OlVOknXonXpnXqnXrnXunXvnXwnXxnXynXsnX~OkPOoZOpZOq[Or_O~OvoOwpOkcXocXpcXqcXrcXucXxcXycXscX~OxsOymXsmX~P|OytO~OluOgZi~OyvO~O|wO}xO!OyOy_X!P_X~Oy|O!PzO~Os}O~OxsOyTasTa~OkPOy]P~Ol!TOgZq~Oy!WO!PzO~Oxdaydasda~P|OkPOy]X~Oy!YO~Oy![O~O",
  goto: "${uPPvy!_!s!x!x#R#R#Rv#Z#^v#d#j#j#j#n#z$Q$XPPPPPP$_$hPPPPP$sRUOQUOQWR^^VX_`ds!PV!Qu!R!TYQORu!R!T^]VX_`ds!PTjYzVeVX__^VX_`ds!P]bVX_ds!PRiXQ!SuR!Z!TQlYR!UzTkYzUdVX_Sqd!PR!PsQrdR!OrS!Ru!TR!X!RQ{lR!V{QfVQgXRm_[aVX_ds!PRn`]cVX_ds!P",
  nodeNames: "âš  Grammar Top Rule Identifier ChoiceOp LiteralString LiteralRegexp NegateOp PlusOp AstOp Skip MainSkip ScopedSkip Precedence PrecedenceItem CutOp LeftOp RightOp",
  maxTerm: 47,
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "1V~RdXY!aYZ!a]^!apq!aqr!frs&Rtu'Ywx*nxy+ryz+wz{+|{|,R|},W!b!c,]!c!}0b#R#S0b#T#o0b#o#p0v#p#q0{#q#r1Q~!fOi~~!kPu~!}#O!n~!qRp#O!z#O#P$y#Q~!z~!}Sp#O!z#O#P#Z#P#Q$t#Q~!z~#^apr!zrs!zs#O!z#O#P#Z#P#Q$c#Q#U!z#U#V!z#V#Y!z#Y#Z!z#Z#b!z#b#c!z#c#f!z#f#g!z#g#h!z#h#i!z#i#j!z#j~!z~$hSq~p#O!z#O#P#Z#P#Q$t#Q~!z~$yOq~~$|apr!zrs!zs#O!z#O#P#Z#P#Q$c#Q#U!z#U#V!z#V#Y!z#Y#Z!z#Z#b!z#b#c!z#c#f!z#f#g!z#g#h!z#h#i!z#i#j!z#j~!z~&UUpq&Rqr&Rrs&hs#O&R#O#P&m#P~&R~&mOo~~&pWrs&R#O#P&R#U#V&R#Y#Z&R#b#c&R#f#g&R#h#i&R#i#j&R~']P!}#O'`~'cRp#O'l#O#P)f#Q~'l~'oSp#O'l#O#P'{#P#Q$t#Q~'l~(Oapr'lrs'ls#O'l#O#P'{#P#Q)T#Q#U'l#U#V'l#V#Y'l#Y#Z'l#Z#b'l#b#c'l#c#f'l#f#g'l#g#h'l#h#i'l#i#j'l#j~'l~)YSq~p#O'l#O#P'{#P#Q$t#Q~'l~)iapr'lrs'ls#O'l#O#P'{#P#Q)T#Q#U'l#U#V'l#V#Y'l#Y#Z'l#Z#b'l#b#c'l#c#f'l#f#g'l#g#h'l#h#i'l#i#j'l#j~'l~*qTpw*nwx+Qx#O*n#O#P+V#P~*n~+VOp~~+YWrs*n#O#P*n#U#V*n#Y#Z*n#b#c*n#f#g*n#h#i*n#i#j*n~+wOr~~+|Os~~,ROw~~,WOv~~,]O!P~~,`U#V#W,r#`#a-T#d#e-l#f#g.y#g#h/h#h#i0P~,uP#i#j,x~,{P#h#i-O~-TO|~~-WP#X#Y-Z~-^P#Y#Z-a~-dP#h#i-g~-lO}~~-oP#f#g-r~-uP#X#Y-x~-{P#V#W.O~.RP#X#Y.U~.XP#W#X.[~._P#X#Y.b~.eP#b#c.h~.kP#V#W.n~.qP#X#Y.t~.yO{~~.|P#]#^/P~/SP#Z#[/V~/YP#[#]/]~/`P#h#i/c~/hO!O~~/kP#_#`/n~/qP#]#^/t~/wP#d#e/z~0POz~~0SP#c#d0V~0YP#d#e0]~0bOj~~0gTk~!O!P0b!Q![0b!c!}0b#R#S0b#T#o0b~0{Ol~~1QOx~~1VOy~",
  tokenizers: [0],
  topRules: {"Grammar":[0,1]},
  tokenPrec: 0
})
