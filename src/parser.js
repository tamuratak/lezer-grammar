// This file was generated by lezer-generator. You probably shouldn't edit it.
const {Parser} = require("lezer")
exports.parser = Parser.deserialize({
  version: 12,
  states: "(pOVQPOOOOQO'#C`'#C`OeQPO'#C_OjQPO'#C^OoQPO'#CgOtQPO'#ChQOQPOOOyQPO,58yOOQO,58x,58xO!_QPO,59ROjQPO,59SOOQO'#Cb'#CbOOQO'#Cc'#CcO!fQPO'#CxOOQO'#Cx'#CxOyQPO'#CxO#^QPO'#CdO#oQPO'#CmOOQO'#DO'#DOOOQO'#Cm'#CmO$dQPO'#CwOOQO'#Cw'#CwO$qQPO1G.eO$vQPO1G.mO%QQPO1G.mO%YQPO1G.mO%_QPO'#CiOOQO'#Ci'#CiO%pQPO1G.nO%xQPO,59dOOQO,59O,59OOOQO,59P,59POOQO,59Q,59QOOQO-E6k-E6kO%}QPO,58{OyQPO'#CnOOQO7+$P7+$PO&YQPO7+$XO&bQPO7+$XOOQO,59U,59UOOQO,59V,59VOOQO,59W,59WOjQPO'#CpO&jQPO7+$YOOQO7+$Y7+$YOOQO1G/O1G/OOOQO-E6l-E6lO&rQPO,59YO'PQPO<<GsOOQO'#Co'#CoO'PQPO<<GsOOQO<<Gs<<GsOOQO,59[,59[OOQO-E6n-E6nOOQO<<Gt<<GtO'XQPOAN=_OOQOAN=_AN=_OOQO-E6m-E6mOOQOG22yG22y",
  stateData: "'a~OgOS~OhROiPOxSOyTO~OjVO~OiPO~OjXO~OjYO~OiPOmZOnZOo[Op_Os`O~OwhO~PyOjVOilXmlXnlXolXplXslXtlXulXvlXwlXqlX~OiPOmZOnZOo[Op_O~OtoOupOiaXmaXnaXoaXpaXsaXvaXwaXqaX~OvsOwkXqkX~PyOwtO~OvsOwuO~PyOjvOeZi~OwuO~OzwO{xO|yOw]X}]X~Ow|O}zO~Oq}O~OvsOwTaqTa~Oj!QOeZq~OiPOw!TO~Ow!WO}zO~Ovbawbaqba~PyOiPOw!YO~OiPOw![O~O",
  goto: "%OsPPtw!_!u!|!|#W#W#Wtt#a#g#g#g#k#z$R$]PPPPPP$c$iPPPPP$uRUOQUOQWR`^VX_`dgs!PX!Rv!Q!S!X[QORv!Q!S!X`]VX_`dgs!PTjYzSeV_RiXa^VX_`dgs!P_bVX_dgs!PQlYR!UzTkYzSdV_QgXUqdg!PR!PsSrdgR!OrQ!SvQ!X!QT!Z!S!XQ{lR!V{QfVRm_^aVX_dgs!PRn`_cVX_dgs!P",
  nodeNames: "âš  Grammar Top Rule Identifier ChoiceOp LiteralString LiteralRegexp NegateOp PlusOp AstOp Skip Precedence PrecedenceItem CutOp LeftOp RightOp",
  maxTerm: 45,
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "1V~RdXY!aYZ!a]^!apq!aqr!frs&Rtu'Ywx*nxy+ryz+wz{+|{|,R|},W!b!c,]!c!}0b#R#S0b#T#o0b#o#p0v#p#q0{#q#r1Q~!fOg~~!kPs~!}#O!n~!qRp#O!z#O#P$y#Q~!z~!}Sp#O!z#O#P#Z#P#Q$t#Q~!z~#^apr!zrs!zs#O!z#O#P#Z#P#Q$c#Q#U!z#U#V!z#V#Y!z#Y#Z!z#Z#b!z#b#c!z#c#f!z#f#g!z#g#h!z#h#i!z#i#j!z#j~!z~$hSo~p#O!z#O#P#Z#P#Q$t#Q~!z~$yOo~~$|apr!zrs!zs#O!z#O#P#Z#P#Q$c#Q#U!z#U#V!z#V#Y!z#Y#Z!z#Z#b!z#b#c!z#c#f!z#f#g!z#g#h!z#h#i!z#i#j!z#j~!z~&UUpq&Rqr&Rrs&hs#O&R#O#P&m#P~&R~&mOm~~&pWrs&R#O#P&R#U#V&R#Y#Z&R#b#c&R#f#g&R#h#i&R#i#j&R~']P!}#O'`~'cRp#O'l#O#P)f#Q~'l~'oSp#O'l#O#P'{#P#Q$t#Q~'l~(Oapr'lrs'ls#O'l#O#P'{#P#Q)T#Q#U'l#U#V'l#V#Y'l#Y#Z'l#Z#b'l#b#c'l#c#f'l#f#g'l#g#h'l#h#i'l#i#j'l#j~'l~)YSo~p#O'l#O#P'{#P#Q$t#Q~'l~)iapr'lrs'ls#O'l#O#P'{#P#Q)T#Q#U'l#U#V'l#V#Y'l#Y#Z'l#Z#b'l#b#c'l#c#f'l#f#g'l#g#h'l#h#i'l#i#j'l#j~'l~*qTpw*nwx+Qx#O*n#O#P+V#P~*n~+VOn~~+YWrs*n#O#P*n#U#V*n#Y#Z*n#b#c*n#f#g*n#h#i*n#i#j*n~+wOp~~+|Oq~~,ROu~~,WOt~~,]O}~~,`U#V#W,r#`#a-T#d#e-l#f#g.y#g#h/h#h#i0P~,uP#i#j,x~,{P#h#i-O~-TOz~~-WP#X#Y-Z~-^P#Y#Z-a~-dP#h#i-g~-lO{~~-oP#f#g-r~-uP#X#Y-x~-{P#V#W.O~.RP#X#Y.U~.XP#W#X.[~._P#X#Y.b~.eP#b#c.h~.kP#V#W.n~.qP#X#Y.t~.yOy~~.|P#]#^/P~/SP#Z#[/V~/YP#[#]/]~/`P#h#i/c~/hO|~~/kP#_#`/n~/qP#]#^/t~/wP#d#e/z~0POx~~0SP#c#d0V~0YP#d#e0]~0bOh~~0gTi~!O!P0b!Q![0b!c!}0b#R#S0b#T#o0b~0{Oj~~1QOv~~1VOw~",
  tokenizers: [0],
  topRules: {"Grammar":[0,1]},
  tokenPrec: 0
})
